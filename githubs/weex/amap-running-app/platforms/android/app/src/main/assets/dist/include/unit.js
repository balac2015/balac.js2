!function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){var o=n(2),i=n(3),r=n(4);__weex_define__("@weex-component/3811496cc41da967d6a1da6e75a01017",[],function(e,t,n){r(n,t,e),t.__esModule&&t.default&&(n.exports=t.default),n.exports.template=o,n.exports.style=i}),__weex_bootstrap__("@weex-component/3811496cc41da967d6a1da6e75a01017",void 0,void 0)},,function(e,t){e.exports={type:"div",classList:["unit-box"],children:[{type:"text",classList:["unit-number"],style:{fontSize:function(){return this.numberSize}},attr:{value:function(){return this.number}}},{type:"text",classList:["unit-text"],attr:{value:function(){return this.label}}}]}},function(e,t){e.exports={"unit-box":{flexDirection:"row",justifyContent:"center",alignItems:"flex-end"},"unit-number":{display:"inline-block",fontSize:50,color:"#111111"},"unit-text":{fontSize:22,color:"#333333",paddingLeft:20,justifyContent:"flex-end",alignItems:"flex-end"}}},function(e,t){e.exports=function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,